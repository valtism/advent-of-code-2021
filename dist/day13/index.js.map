{
  "version": 3,
  "sources": ["../../src/day13/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\";\nimport _ from \"lodash\";\nimport { permutator } from \"../utils/index.js\";\n\nconst parseInput = (rawInput: string) => {\n  const [rawCoords, rawInstructions] = rawInput.split(\"\\n\\n\");\n  const coords = rawCoords.split(\"\\n\").map((line) => {\n    const [x, y] = line.trim().split(\",\").map(Number);\n    return { x, y };\n  });\n  const instructions = rawInstructions.split(\"\\n\").map((line) => {\n    const [direction, steps] = line.trim().slice(11).split(\"=\");\n    const dir = direction.trim() as \"x\" | \"y\";\n    return { direction: dir, steps: Number(steps) };\n  });\n  return { coords, instructions };\n};\n\nconst part1 = (rawInput: string) => {\n  const { coords, instructions } = parseInput(rawInput);\n\n  const set = new Set<string>();\n  coords.forEach((coord) => {\n    set.add(`${coord.x},${coord.y}`);\n  });\n  [instructions[0]].forEach((instruction) => {\n    const { direction, steps } = instruction;\n\n    set.forEach((coord) => {\n      const [x, y] = coord.split(\",\").map(Number);\n      const newX = direction === \"x\" ? steps - Math.abs(x - steps) : x;\n      const newY = direction === \"y\" ? steps - Math.abs(y - steps) : y;\n      set.add(`${newX},${newY}`);\n      if (\n        (direction === \"x\" && x > steps) ||\n        (direction === \"y\" && y > steps)\n      ) {\n        set.delete(coord);\n      }\n    });\n  });\n  return set.size;\n};\n\nconst part2 = (rawInput: string) => {\n  const { coords, instructions } = parseInput(rawInput);\n\n  const set = new Set<string>();\n  coords.forEach((coord) => {\n    set.add(`${coord.x},${coord.y}`);\n  });\n  instructions.forEach((instruction) => {\n    const { direction, steps } = instruction;\n\n    set.forEach((coord) => {\n      const [x, y] = coord.split(\",\").map(Number);\n      const newX = direction === \"x\" ? steps - Math.abs(x - steps) : x;\n      const newY = direction === \"y\" ? steps - Math.abs(y - steps) : y;\n      set.add(`${newX},${newY}`);\n      if (\n        (direction === \"x\" && x > steps) ||\n        (direction === \"y\" && y > steps)\n      ) {\n        set.delete(coord);\n      }\n    });\n  });\n\n  let xMax = 0;\n  let yMax = 0;\n  set.forEach((coord) => {\n    const [x, y] = coord.split(\",\").map(Number);\n    xMax = Math.max(xMax, x);\n    yMax = Math.max(yMax, y);\n  });\n\n  const printout: string[][] = new Array(yMax + 1)\n    .fill(null)\n    .map(() => new Array(xMax + 1).fill(\" \"));\n\n  set.forEach((coord) => {\n    const [x, y] = coord.split(\",\").map(Number);\n    printout[y][x] = \"X\";\n  });\n\n  return `\\n${printout.map((row) => row.join(\"\")).join(\"\\n\")}\\n`;\n};\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `6,10\n      0,14\n      9,10\n      0,3\n      10,4\n      4,11\n      6,0\n      6,12\n      4,1\n      0,13\n      10,12\n      3,4\n      3,0\n      8,4\n      1,10\n      2,14\n      8,10\n      9,0\n\n      fold along y=7\n      fold along x=5`,\n        expected: 17,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      // { input: ``, expected: \"\" },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n});\n"],
  "mappings": "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",
  "names": []
}
