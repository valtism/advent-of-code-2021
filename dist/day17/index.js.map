{
  "version": 3,
  "sources": ["../../src/day17/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\";\nimport _ from \"lodash\";\n\nconst parseInput = (rawInput: string) =>\n  rawInput\n    .slice(13)\n    .split(\", \")\n    .map((s) => s.slice(2).split(\"..\").map(Number));\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n  const xMin = input[0][0];\n  const xMax = input[0][1];\n  const yMin = input[1][0];\n  const yMax = input[1][1];\n\n  const trajectories = [];\n  for (let y0 = 0; y0 < 200; y0++) {\n    for (let x0 = 0; x0 < 500; x0++) {\n      const hit = stepTrajectory(x0, y0);\n      if (hit !== -1) {\n        trajectories.push(hit);\n      }\n    }\n  }\n\n  function stepTrajectory(x0: number, y0: number) {\n    let xv = x0;\n    let yv = y0;\n    let x = 0;\n    let y = 0;\n    let highest = -Infinity;\n    while (x < xMax && y > yMin) {\n      x += xv;\n      y += yv;\n      xv = Math.max(0, xv - 1);\n      yv -= 1;\n      if (y > highest) {\n        highest = y;\n      }\n\n      if (x >= xMin && x <= xMax && y >= yMin && y <= yMax) {\n        return highest;\n      }\n    }\n    return -1;\n  }\n\n  return trajectories.reduce((a, b) => (a > b ? a : b));\n};\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n  const xMin = input[0][0];\n  const xMax = input[0][1];\n  const yMin = input[1][0];\n  const yMax = input[1][1];\n\n  const trajectories = [];\n  let tooFar = false;\n  for (let y0 = -100; y0 < 100; y0++) {\n    tooFar = false;\n    for (let x0 = 0; x0 < 500; x0++) {\n      const hit = stepTrajectory(x0, y0);\n      if (hit) {\n        trajectories.push(hit);\n      }\n    }\n  }\n\n  function stepTrajectory(x0: number, y0: number) {\n    let xv = x0;\n    let yv = y0;\n    let x = 0;\n    let y = 0;\n    while (x < xMax && y > yMin && !tooFar) {\n      x += xv;\n      y += yv;\n      xv = Math.max(0, xv - 1);\n      yv -= 1;\n\n      if (x >= xMin && x <= xMax && y >= yMin && y <= yMax) {\n        return `${x},${y}`;\n      }\n    }\n    return false;\n  }\n\n  return trajectories.length;\n};\n\nrun({\n  part1: {\n    tests: [{ input: `target area: x=20..30, y=-10..-5`, expected: 45 }],\n    solution: part1,\n  },\n  part2: {\n    tests: [{ input: `target area: x=20..30, y=-10..-5`, expected: 112 }],\n    solution: part2,\n  },\n  trimTestInputs: true,\n});\n"],
  "mappings": "AAAA;AAGA,MAAM,aAAa,CAAC,aAClB,SACG,MAAM,IACN,MAAM,MACN,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,MAAM,IAAI;AAE3C,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,OAAO,MAAM,GAAG;AACtB,QAAM,OAAO,MAAM,GAAG;AACtB,QAAM,OAAO,MAAM,GAAG;AACtB,QAAM,OAAO,MAAM,GAAG;AAEtB,QAAM,eAAe;AACrB,WAAS,KAAK,GAAG,KAAK,KAAK,MAAM;AAC/B,aAAS,KAAK,GAAG,KAAK,KAAK,MAAM;AAC/B,YAAM,MAAM,eAAe,IAAI;AAC/B,UAAI,QAAQ,IAAI;AACd,qBAAa,KAAK;AAAA;AAAA;AAAA;AAKxB,0BAAwB,IAAY,IAAY;AAC9C,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,IAAI;AACR,QAAI,IAAI;AACR,QAAI,UAAU;AACd,WAAO,IAAI,QAAQ,IAAI,MAAM;AAC3B,WAAK;AACL,WAAK;AACL,WAAK,KAAK,IAAI,GAAG,KAAK;AACtB,YAAM;AACN,UAAI,IAAI,SAAS;AACf,kBAAU;AAAA;AAGZ,UAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,MAAM;AACpD,eAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAGT,SAAO,aAAa,OAAO,CAAC,GAAG,MAAO,IAAI,IAAI,IAAI;AAAA;AAGpD,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,OAAO,MAAM,GAAG;AACtB,QAAM,OAAO,MAAM,GAAG;AACtB,QAAM,OAAO,MAAM,GAAG;AACtB,QAAM,OAAO,MAAM,GAAG;AAEtB,QAAM,eAAe;AACrB,MAAI,SAAS;AACb,WAAS,KAAK,MAAM,KAAK,KAAK,MAAM;AAClC,aAAS;AACT,aAAS,KAAK,GAAG,KAAK,KAAK,MAAM;AAC/B,YAAM,MAAM,eAAe,IAAI;AAC/B,UAAI,KAAK;AACP,qBAAa,KAAK;AAAA;AAAA;AAAA;AAKxB,0BAAwB,IAAY,IAAY;AAC9C,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,IAAI;AACR,QAAI,IAAI;AACR,WAAO,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ;AACtC,WAAK;AACL,WAAK;AACL,WAAK,KAAK,IAAI,GAAG,KAAK;AACtB,YAAM;AAEN,UAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,MAAM;AACpD,eAAO,GAAG,KAAK;AAAA;AAAA;AAGnB,WAAO;AAAA;AAGT,SAAO,aAAa;AAAA;AAGtB,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO,CAAC,EAAE,OAAO,oCAAoC,UAAU;AAAA,IAC/D,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO,CAAC,EAAE,OAAO,oCAAoC,UAAU;AAAA,IAC/D,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
