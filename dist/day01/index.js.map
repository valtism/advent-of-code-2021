{
  "version": 3,
  "sources": ["../../src/day01/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\";\n\nconst parseInput = (rawInput: string) => rawInput;\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n\n  let deeper = 0;\n  let lastDepth = Infinity;\n  for (const depth of input.split(\"\\n\").map(Number)) {\n    if (depth > lastDepth) {\n      deeper++;\n    }\n    lastDepth = depth;\n  }\n  return deeper;\n};\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n  const depths = input.split(\"\\n\").map(Number);\n  let deeper = 0;\n  let lastSum = Infinity;\n  for (let i = 2; i < depths.length; i++) {\n    const sum = depths[i] + (depths[i - 1] || 0) + (depths[i - 2] || 0);\n    if (sum > lastSum) {\n      deeper++;\n    }\n    lastSum = sum;\n  }\n\n  return deeper;\n};\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `199\n      200\n      208\n      210\n      200\n      207\n      240\n      269\n      260\n      263`,\n        expected: 7,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      {\n        input: `199\n      200\n      208\n      210\n      200\n      207\n      240\n      269\n      260\n      263`,\n        expected: 5,\n      },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n});\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAAqB;AAEzC,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AAEzB,MAAI,SAAS;AACb,MAAI,YAAY;AAChB,aAAW,SAAS,MAAM,MAAM,MAAM,IAAI,SAAS;AACjD,QAAI,QAAQ,WAAW;AACrB;AAAA;AAEF,gBAAY;AAAA;AAEd,SAAO;AAAA;AAGT,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,SAAS,MAAM,MAAM,MAAM,IAAI;AACrC,MAAI,SAAS;AACb,MAAI,UAAU;AACd,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAM,MAAM,OAAO,KAAM,QAAO,IAAI,MAAM,KAAM,QAAO,IAAI,MAAM;AACjE,QAAI,MAAM,SAAS;AACjB;AAAA;AAEF,cAAU;AAAA;AAGZ,SAAO;AAAA;AAGT,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
