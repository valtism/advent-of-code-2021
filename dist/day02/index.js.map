{
  "version": 3,
  "sources": ["../../src/day02/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\";\n\nconst parseInput = (rawInput: string) => rawInput;\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n  const rows = input.split(\"\\n\").map((x) => {\n    const elements = x.split(\" \");\n    return { instruction: elements[0], value: Number(elements[1]) };\n  });\n\n  const forwards = rows\n    .filter((x) => x.instruction === \"forward\")\n    .reduce((acc, curr) => acc + curr.value, 0);\n  const up = rows\n    .filter((x) => x.instruction === \"up\")\n    .reduce((acc, curr) => acc + curr.value, 0);\n  const down = rows\n    .filter((x) => x.instruction === \"down\")\n    .reduce((acc, curr) => acc + curr.value, 0);\n\n  return forwards * (down - up);\n};\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n\n  const rows = input.split(\"\\n\").map((x) => {\n    const elements = x.split(\" \");\n    return { instruction: elements[0], value: Number(elements[1]) };\n  });\n\n  let aim = 0;\n  let depth = 0;\n  let position = 0;\n  for (const row of rows) {\n    switch (row.instruction) {\n      case \"down\":\n        aim += row.value;\n        break;\n      case \"up\":\n        aim -= row.value;\n        break;\n      case \"forward\":\n        position += row.value;\n        depth += aim * row.value;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return depth * position;\n};\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `forward 5\ndown 5\nforward 8\nup 3\ndown 8\nforward 2`,\n        expected: 150,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      {\n        input: `forward 5\ndown 5\nforward 8\nup 3\ndown 8\nforward 2`,\n        expected: 900,\n      },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n});\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAAqB;AAEzC,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,OAAO,MAAM,MAAM,MAAM,IAAI,CAAC,MAAM;AACxC,UAAM,WAAW,EAAE,MAAM;AACzB,WAAO,EAAE,aAAa,SAAS,IAAI,OAAO,OAAO,SAAS;AAAA;AAG5D,QAAM,WAAW,KACd,OAAO,CAAC,MAAM,EAAE,gBAAgB,WAChC,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO;AAC3C,QAAM,KAAK,KACR,OAAO,CAAC,MAAM,EAAE,gBAAgB,MAChC,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO;AAC3C,QAAM,OAAO,KACV,OAAO,CAAC,MAAM,EAAE,gBAAgB,QAChC,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO;AAE3C,SAAO,WAAY,QAAO;AAAA;AAG5B,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AAEzB,QAAM,OAAO,MAAM,MAAM,MAAM,IAAI,CAAC,MAAM;AACxC,UAAM,WAAW,EAAE,MAAM;AACzB,WAAO,EAAE,aAAa,SAAS,IAAI,OAAO,OAAO,SAAS;AAAA;AAG5D,MAAI,MAAM;AACV,MAAI,QAAQ;AACZ,MAAI,WAAW;AACf,aAAW,OAAO,MAAM;AACtB,YAAQ,IAAI;AAAA,WACL;AACH,eAAO,IAAI;AACX;AAAA,WACG;AACH,eAAO,IAAI;AACX;AAAA,WACG;AACH,oBAAY,IAAI;AAChB,iBAAS,MAAM,IAAI;AACnB;AAAA;AAEA;AAAA;AAAA;AAIN,SAAO,QAAQ;AAAA;AAGjB,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
