{
  "version": 3,
  "sources": ["../../src/day10/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\";\nimport _ from \"lodash\";\n\nconst parseInput = (rawInput: string) =>\n  rawInput.split(\"\\n\").map((line) => line.trim().split(\"\"));\n\nconst matchingChar = {\n  \"(\": \")\",\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"<\": \">\",\n  \")\": \"(\",\n  \"]\": \"[\",\n  \"}\": \"{\",\n  \">\": \"<\",\n};\n\nconst openChars = [\"(\", \"[\", \"{\", \"<\"];\n\nconst illegalCharPoints = {\n  \")\": 3,\n  \"]\": 57,\n  \"}\": 1197,\n  \">\": 25137,\n};\n\nconst autoCompletePoints = {\n  \")\": 1,\n  \"]\": 2,\n  \"}\": 3,\n  \">\": 4,\n};\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n\n  const scores = input.map((row) => {\n    let opens: string[] = [];\n    for (const char of row) {\n      if (openChars.includes(char)) {\n        opens.push(char);\n      } else {\n        const lastOpen = opens.pop();\n        if (lastOpen !== matchingChar[char]) {\n          return illegalCharPoints[char];\n        }\n      }\n    }\n    return 0;\n  });\n\n  return scores.reduce((acc, curr) => acc + curr, 0);\n};\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n\n  const missingChars = input\n    .map((row) => {\n      let opens: string[] = [];\n      for (const char of row) {\n        if (openChars.includes(char)) {\n          opens.push(char);\n        } else {\n          const lastOpen = opens.pop();\n          if (lastOpen !== matchingChar[char]) {\n            return null;\n          }\n        }\n      }\n      const missingChars: string[] = opens\n        .reverse()\n        .map((o) => matchingChar[o]);\n      return missingChars;\n    })\n    .filter(Boolean);\n\n  const score = missingChars\n    .map((s) => s.reduce((acc, curr) => acc * 5 + autoCompletePoints[curr], 0))\n    .sort((a, b) => a - b);\n\n  const middleIndex = Math.floor(score.length / 2);\n\n  return score[middleIndex];\n};\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `[({(<(())[]>[[{[]{<()<>>\n        [(()[<>])]({[<{<<[]>>(\n        {([(<{}[<>[]}>{[]{[(<()>\n        (((({<>}<{<{<>}{[]{[]{}\n        [[<[([]))<([[{}[[()]]]\n        [{[{({}]{}}([{[{{{}}([]\n        {<[[]]>}<{[{[{[]{()[[[]\n        [<(<(<(<{}))><([]([]()\n        <{([([[(<>()){}]>(<<{{\n        <{([{{}}[<[[[<>{}]]]>[]]`,\n        expected: 26397,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      {\n        input: `[({(<(())[]>[[{[]{<()<>>\n        [(()[<>])]({[<{<<[]>>(\n        {([(<{}[<>[]}>{[]{[(<()>\n        (((({<>}<{<{<>}{[]{[]{}\n        [[<[([]))<([[{}[[()]]]\n        [{[{({}]{}}([{[{{{}}([]\n        {<[[]]>}<{[{[{[]{()[[[]\n        [<(<(<(<{}))><([]([]()\n        <{([([[(<>()){}]>(<<{{\n        <{([{{}}[<[[[<>{}]]]>[]]`,\n        expected: 288957,\n      },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n});\n"],
  "mappings": "AAAA;AAGA,MAAM,aAAa,CAAC,aAClB,SAAS,MAAM,MAAM,IAAI,CAAC,SAAS,KAAK,OAAO,MAAM;AAEvD,MAAM,eAAe;AAAA,EACnB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA;AAGP,MAAM,YAAY,CAAC,KAAK,KAAK,KAAK;AAElC,MAAM,oBAAoB;AAAA,EACxB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA;AAGP,MAAM,qBAAqB;AAAA,EACzB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA;AAGP,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AAEzB,QAAM,SAAS,MAAM,IAAI,CAAC,QAAQ;AAChC,QAAI,QAAkB;AACtB,eAAW,QAAQ,KAAK;AACtB,UAAI,UAAU,SAAS,OAAO;AAC5B,cAAM,KAAK;AAAA,aACN;AACL,cAAM,WAAW,MAAM;AACvB,YAAI,aAAa,aAAa,OAAO;AACnC,iBAAO,kBAAkB;AAAA;AAAA;AAAA;AAI/B,WAAO;AAAA;AAGT,SAAO,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,MAAM;AAAA;AAGlD,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AAEzB,QAAM,eAAe,MAClB,IAAI,CAAC,QAAQ;AACZ,QAAI,QAAkB;AACtB,eAAW,QAAQ,KAAK;AACtB,UAAI,UAAU,SAAS,OAAO;AAC5B,cAAM,KAAK;AAAA,aACN;AACL,cAAM,WAAW,MAAM;AACvB,YAAI,aAAa,aAAa,OAAO;AACnC,iBAAO;AAAA;AAAA;AAAA;AAIb,UAAM,gBAAyB,MAC5B,UACA,IAAI,CAAC,MAAM,aAAa;AAC3B,WAAO;AAAA,KAER,OAAO;AAEV,QAAM,QAAQ,aACX,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,SAAS,MAAM,IAAI,mBAAmB,OAAO,IACvE,KAAK,CAAC,GAAG,MAAM,IAAI;AAEtB,QAAM,cAAc,KAAK,MAAM,MAAM,SAAS;AAE9C,SAAO,MAAM;AAAA;AAGf,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
